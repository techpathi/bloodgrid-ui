{"version":3,"sources":["components/landing-page/LandingPage.jsx","components/locationsearch-input/PlacesSearchInput.jsx","components/register-donor/RegisterDonor.jsx","components/search-donor/SearchDonor.jsx","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","history","useHistory","className","colorScheme","variant","rightIcon","onClick","push","PlacesSearchInput","useState","place","setPlace","apiKey","selectProps","onChange","placeholder","RegisterDonor","formik","useFormik","initialValues","fullName","age","gender","bloodgroup","location","type","name","getFieldProps","disabled","value","id","console","log","JSON","stringify","values","SearchDonor","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c6a6ee3.chunk.js","sourcesContent":["import React from 'react';\nimport './landing-page.scss';\nimport { Button } from '@chakra-ui/button';\nimport { BiDonateBlood, BiSearch } from 'react-icons/bi';\nimport { useHistory } from 'react-router-dom';\n\nexport default function LandingPage() {\n  const history = useHistory();\n\n  return (\n    <div className='landing-container'>\n      <div className='top-container'>\n        <div>\n          <div className='logo-block'>BLOODGRID</div>\n          <p className='hero-text'>\n            Find blood donors around you just like you find a cab!\n          </p>\n        </div>\n      </div>\n      <div className='middle-container'>\n        <div>\n          <Button\n            colorScheme='red'\n            className='action-button'\n            variant='outline'\n            rightIcon={<BiDonateBlood />}\n            onClick={() => history.push('/register-donor')}\n          >\n            I am here to donate\n          </Button>\n          <br />\n          <Button\n            colorScheme='red'\n            className='action-button'\n            variant='outline'\n            rightIcon={<BiSearch />}\n            onClick={() => history.push('/search')}\n          >\n            I am looking for donor\n          </Button>\n        </div>\n      </div>\n      <div className='bottom-container'>\n        <p className='hero-text'>How bloodgrid works</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n\nexport default function PlacesSearchInput() {\n  const [place, setPlace] = useState(null);\n\n  return (\n    <GooglePlacesAutocomplete\n      apiKey={'AIzaSyBJzpT-DK-84S6HcDUt1eOnnpsLQeEPrjA'}\n      selectProps={{\n        place,\n        onChange: setPlace,\n        placeholder: 'City or Town'\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport './register-donor.scss';\nimport { Button, Input } from '@chakra-ui/react';\nimport PlacesSearchInput from '../locationsearch-input/PlacesSearchInput';\n\nexport default function RegisterDonor() {\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      age: '',\n      gender: '',\n      bloodgroup: '',\n      location: ''\n    }\n  });\n\n  const formSubmit = () => {\n    console.log(JSON.stringify(formik.values, null, 2));\n  };\n\n  return (\n    <div className='register-donor-container'>\n      <div>\n        <p className='header-text'>\n          Let us add you to our list of life saviours\n        </p>\n        <form className='register-donor-form'>\n          <Input\n            variant='flushed'\n            type='text'\n            name='fullName'\n            placeholder='Full name'\n            {...formik.getFieldProps('fullName')}\n          />\n          <br />\n          <Input\n            type='number'\n            name='age'\n            placeholder='Age'\n            {...formik.getFieldProps('age')}\n          />\n          <br />\n          <select name='gender' {...formik.getFieldProps('gender')}>\n            <option disabled value=''>\n              Gender\n            </option>\n            <option value='male'>Male</option>\n            <option value='female'>Female</option>\n            <option value='neutral'>Prefer not to say</option>\n          </select>\n          <br />\n          <select name='bloodgroup' {...formik.getFieldProps('bloodgroup')}>\n            <option disabled value=''>\n              Blood group\n            </option>\n            <option value='O+'>O+</option>\n            <option value='O-'>O-</option>\n            <option value='A+'>A+</option>\n            <option value='A-'>A-</option>\n            <option value='B+'>B+</option>\n            <option value='B-'>B-</option>\n            <option value='AB+'>AB+</option>\n            <option value='AB-'>AB-</option>\n          </select>\n          <br />\n          <div id='place-search-input'>\n            <PlacesSearchInput />\n          </div>\n        </form>\n        <Button\n          colorScheme='red'\n          className='action-button'\n          variant='solid'\n          type='submit'\n          onClick={formSubmit}\n        >\n          Add Me\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function SearchDonor() {\n  return <div>Search donor page</div>;\n}\n","import './App.css';\nimport LandingPage from './components/landing-page/LandingPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport RegisterDonor from './components/register-donor/RegisterDonor';\nimport SearchDonor from './components/search-donor/SearchDonor';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LandingPage} />\n          <Route path='/register-donor' component={RegisterDonor} />\n          <Route path='/search' component={SearchDonor} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}